{"version":3,"file":"test-support.js","sources":["../src/test-support.ts"],"sourcesContent":["import { find, triggerEvent } from '@ember/test-helpers';\nimport { assert } from '@ember/debug';\n\n/**\n  Triggers a `change` event on a `FileUpload` input with `files`.\n\n  All `files` must be [HTML5 File objects](https://developer.mozilla.org/en-US/docs/Web/API/File).\n\n  A single file, or multiple files may be passed as arguments.\n\n  ```javascript\n    // A single file\n    const file = new File([], 'dingus.txt');\n    await selectFiles('.file-upload input', file);\n  ```\n\n  ```javascript\n    // Multiple files\n    const file1 = new File([], 'dingus1.txt');\n    const file2 = new File([], 'dingus2.txt');\n    await selectFiles('.file-upload input', file1, file2);\n  ```\n\n  Returns `Promise<void>` which resolves when the application is settled.\n\n  @function selectFiles\n  @param {string | HTMLElement} target The element or selector representing a file input\n  @param {File} ...files One or more File objects\n  @return {Promise}\n */\nexport async function selectFiles(\n  target: string | HTMLElement,\n  ...files: (File | Blob)[]\n) {\n  const input = target instanceof HTMLElement ? target : find(target);\n  assert(\n    `Target '${target}' is not an input element.`,\n    input && input.tagName === 'INPUT',\n  );\n  assert(\n    'All files must be instances of File/Blob type',\n    files.every((file) => file instanceof Blob),\n  );\n\n  return triggerEvent(input, 'change', { files });\n}\n\n/**\n  Triggers `dragenter`, `dragover`, and `drop` events on a `FileDropzone` with `files`.\n\n  All `files` must be [HTML5 File objects](https://developer.mozilla.org/en-US/docs/Web/API/File).\n\n  A single file, or multiple files may be passed as arguments.\n\n  ```javascript\n    // A single file\n    const file = new File([], 'dingus.txt');\n    await dragAndDrop('.file-dropzone', file);\n  ```\n\n  ```javascript\n    // Multiple files\n    const file1 = new File([], 'dingus1.txt');\n    const file2 = new File([], 'dingus2.txt');\n    await dragAndDrop('.file-dropzone', file1, file2);\n  ```\n\n  Returns `Promise<void>` which resolves when the application is settled.\n\n  @function dragAndDrop\n  @param {string | HTMLElement} target The element or selector representing a FileDropzone\n  @param {File} ...files One or more File objects\n  @return {Promise}\n */\nexport async function dragAndDrop(\n  target: string | HTMLElement,\n  ...files: (File | Blob)[]\n) {\n  const dropzone = target instanceof HTMLElement ? target : find(target);\n\n  assert(`Target '${dropzone}' could not be found.`, dropzone);\n  assert(\n    'All files must be instances of File/Blob type',\n    files.every((file) => file instanceof Blob),\n  );\n\n  const dataTransfer = { files };\n\n  await triggerEvent(dropzone, 'dragenter', { dataTransfer });\n  await triggerEvent(dropzone, 'dragover', { dataTransfer });\n  return triggerEvent(dropzone, 'drop', { dataTransfer });\n}\n\n/**\n  Triggers a `dragenter` event on a `FileDropzone` with `files`.\n\n  All `files` must be [HTML5 File objects](https://developer.mozilla.org/en-US/docs/Web/API/File).\n\n  A single file, or multiple files may be passed as arguments.\n\n  ```javascript\n    // A single file\n    const file = new File([], 'dingus.txt');\n    await dragEnter('.file-dropzone', file);\n  ```\n\n  ```javascript\n    // Multiple files\n    const file1 = new File([], 'dingus1.txt');\n    const file2 = new File([], 'dingus2.txt');\n    await dragEnter('.file-dropzone', file1, file2);\n  ```\n\n  Returns `Promise<void>` which resolves when the application is settled.\n\n  @function dragEnter\n  @param {string | HTMLElement} target The element or selector representing a FileDropzone\n  @param {File} ...files One or more File objects\n  @return {Promise}\n */\nexport async function dragEnter(\n  target: string | HTMLElement,\n  ...files: (File | Blob)[]\n) {\n  const dropzone = target instanceof HTMLElement ? target : find(target);\n\n  assert(`Target '${dropzone}' could not be found.`, dropzone);\n  assert(\n    'All files must be instances of File/Blob type',\n    files.every((file) => file instanceof Blob),\n  );\n\n  const dataTransfer = { files };\n\n  return triggerEvent(dropzone, 'dragenter', { dataTransfer });\n}\n\n/**\n  Triggers a `dragleave` event on a `FileDropzone` with `files`.\n\n  All `files` must be [HTML5 File objects](https://developer.mozilla.org/en-US/docs/Web/API/File).\n\n  A single file, or multiple files may be passed as arguments.\n\n  ```javascript\n    // A single file\n    const file = new File([], 'dingus.txt');\n    await dragLeave('.file-dropzone', file);\n  ```\n\n  ```javascript\n    // Multiple files\n    const file1 = new File([], 'dingus1.txt');\n    const file2 = new File([], 'dingus2.txt');\n    await dragLeave('.file-dropzone', file1, file2);\n  ```\n\n  Returns `Promise<void>` which resolves when the application is settled.\n\n  @function dragLeave\n  @param {string | HTMLElement} target The element or selector representing a FileDropzone\n  @param {File} ...files One or more File objects\n  @return {Promise}\n */\nexport async function dragLeave(\n  target: string | HTMLElement,\n  ...files: (File | Blob)[]\n) {\n  const dropzone = target instanceof HTMLElement ? target : find(target);\n\n  assert(`Target '${dropzone}' could not be found.`, dropzone);\n  assert(\n    'All files must be instances of File/Blob type',\n    files.every((file) => file instanceof Blob),\n  );\n\n  const dataTransfer = { files };\n\n  return triggerEvent(dropzone, 'dragleave', { dataTransfer });\n}\n"],"names":["selectFiles","target","files","input","HTMLElement","find","assert","tagName","every","file","Blob","triggerEvent","dragAndDrop","dropzone","dataTransfer","dragEnter","dragLeave"],"mappings":"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"}