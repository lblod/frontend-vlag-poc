import { SexpOpcodes } from '@glimmer/interfaces';
import { Compilers, PushExpressionOp } from './compilers';
export declare const EXPRESSIONS: Compilers<PushExpressionOp, SexpOpcodes.Undefined | SexpOpcodes.Call | SexpOpcodes.Concat | SexpOpcodes.GetSymbol | SexpOpcodes.GetTemplateSymbol | SexpOpcodes.GetStrictFree | SexpOpcodes.GetFreeAsComponentOrHelperHeadOrThisFallback | SexpOpcodes.GetFreeAsComponentOrHelperHead | SexpOpcodes.GetFreeAsHelperHeadOrThisFallback | SexpOpcodes.GetFreeAsDeprecatedHelperHeadOrThisFallback | SexpOpcodes.GetFreeAsHelperHead | SexpOpcodes.GetFreeAsModifierHead | SexpOpcodes.GetFreeAsComponentHead | SexpOpcodes.HasBlock | SexpOpcodes.HasBlockParams | SexpOpcodes.Curry | SexpOpcodes.Not | SexpOpcodes.IfInline | SexpOpcodes.GetDynamicVar | SexpOpcodes.Log>;
//# sourceMappingURL=expressions.d.ts.map