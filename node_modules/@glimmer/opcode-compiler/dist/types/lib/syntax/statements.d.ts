import { SexpOpcodes, WellKnownAttrName, WellKnownTagName } from '@glimmer/interfaces';
import { Compilers, PushStatementOp } from './compilers';
export declare const STATEMENTS: Compilers<PushStatementOp, SexpOpcodes.Append | SexpOpcodes.TrustingAppend | SexpOpcodes.Comment | SexpOpcodes.Modifier | SexpOpcodes.Block | SexpOpcodes.Component | SexpOpcodes.OpenElement | SexpOpcodes.OpenElementWithSplat | SexpOpcodes.FlushElement | SexpOpcodes.CloseElement | SexpOpcodes.StaticAttr | SexpOpcodes.DynamicAttr | SexpOpcodes.ComponentAttr | SexpOpcodes.AttrSplat | SexpOpcodes.Yield | SexpOpcodes.DynamicArg | SexpOpcodes.StaticArg | SexpOpcodes.TrustingDynamicAttr | SexpOpcodes.TrustingComponentAttr | SexpOpcodes.StaticComponentAttr | SexpOpcodes.Debugger | SexpOpcodes.InElement | SexpOpcodes.If | SexpOpcodes.Each | SexpOpcodes.With | SexpOpcodes.Let | SexpOpcodes.WithDynamicVars | SexpOpcodes.InvokeComponent>;
export declare function inflateTagName(tagName: string | WellKnownTagName): string;
export declare function inflateAttrName(attrName: string | WellKnownAttrName): string;
//# sourceMappingURL=statements.d.ts.map