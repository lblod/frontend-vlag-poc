import { assert } from '@glimmer/util';
export var Compilers = /*#__PURE__*/function () {
  function Compilers() {
    this.names = {};
    this.funcs = [];
  }

  var _proto = Compilers.prototype;

  _proto.add = function add(name, func) {
    this.names[name] = this.funcs.push(func) - 1;
  };

  _proto.compile = function compile(op, sexp) {
    var name = sexp[0];
    var index = this.names[name];
    var func = this.funcs[index];
    false && assert(!!func, "expected an implementation for " + sexp[0]);
    func(op, sexp);
  };

  return Compilers;
}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL0BnbGltbWVyL29wY29kZS1jb21waWxlci9saWIvc3ludGF4L2NvbXBpbGVycy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxTQUFBLE1BQUEsUUFBQSxlQUFBO0FBZUEsV0FBTSxTQUFOO0FBQUEsdUJBQUE7QUFDVSxTQUFBLEtBQUEsR0FBQSxFQUFBO0FBSUEsU0FBQSxLQUFBLEdBQUEsRUFBQTtBQWlCVDs7QUF0QkQ7O0FBQUEsU0FPRSxHQVBGLEdBT0UsYUFBRyxJQUFILEVBQUcsSUFBSCxFQUU0RDtBQUUxRCxTQUFBLEtBQUEsQ0FBQSxJQUFBLElBQW1CLEtBQUEsS0FBQSxDQUFBLElBQUEsQ0FBQSxJQUFBLElBQW5CLENBQUE7QUFDRCxHQVpIOztBQUFBLFNBY0UsT0FkRixHQWNFLGlCQUFPLEVBQVAsRUFBTyxJQUFQLEVBQXFEO0FBQ25ELFFBQUksSUFBSSxHQUFHLElBQUksQ0FBZixDQUFlLENBQWY7QUFDQSxRQUFJLEtBQUssR0FBRyxLQUFBLEtBQUEsQ0FBWixJQUFZLENBQVo7QUFDQSxRQUFJLElBQUksR0FBRyxLQUFBLEtBQUEsQ0FBWCxLQUFXLENBQVg7QUFIbUQsYUFJbkQsTUFBTSxDQUFDLENBQUMsQ0FBRixJQUFBLHNDQUEyQyxJQUFJLENBSkYsQ0FJRSxDQUEvQyxDQUo2QztBQU1uRCxJQUFBLElBQUksQ0FBQSxFQUFBLEVBQUosSUFBSSxDQUFKO0FBQ0QsR0FyQkg7O0FBQUE7QUFBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJ1aWxkZXJPcCwgSGlnaExldmVsT3AsIFNleHBPcGNvZGUsIFNleHBPcGNvZGVNYXAgfSBmcm9tICdAZ2xpbW1lci9pbnRlcmZhY2VzJztcbmltcG9ydCB7IGFzc2VydCB9IGZyb20gJ0BnbGltbWVyL3V0aWwnO1xuXG5leHBvcnQgdHlwZSBQdXNoRXhwcmVzc2lvbk9wID0gKC4uLm9wOiBCdWlsZGVyT3AgfCBIaWdoTGV2ZWxPcCkgPT4gdm9pZDtcblxuZGVjbGFyZSBjb25zdCBTVEFURU1FTlQ6IHVuaXF1ZSBzeW1ib2w7XG5cbmV4cG9ydCB0eXBlIEhpZ2hMZXZlbFN0YXRlbWVudE9wID0gW3sgW1NUQVRFTUVOVF06IHVuZGVmaW5lZCB9XTtcblxuZXhwb3J0IHR5cGUgUHVzaFN0YXRlbWVudE9wID0gKC4uLm9wOiBCdWlsZGVyT3AgfCBIaWdoTGV2ZWxPcCB8IEhpZ2hMZXZlbFN0YXRlbWVudE9wKSA9PiB2b2lkO1xuXG5leHBvcnQgdHlwZSBDb21waWxlckZ1bmN0aW9uPFB1c2hPcCBleHRlbmRzIFB1c2hFeHByZXNzaW9uT3AsIFRTZXhwPiA9IChcbiAgb3A6IFB1c2hPcCxcbiAgc2V4cDogVFNleHBcbikgPT4gdm9pZDtcblxuZXhwb3J0IGNsYXNzIENvbXBpbGVyczxQdXNoT3AgZXh0ZW5kcyBQdXNoRXhwcmVzc2lvbk9wLCBUU2V4cE9wY29kZXMgZXh0ZW5kcyBTZXhwT3Bjb2RlPiB7XG4gIHByaXZhdGUgbmFtZXM6IHtcbiAgICBbbmFtZTogbnVtYmVyXTogbnVtYmVyO1xuICB9ID0ge307XG5cbiAgcHJpdmF0ZSBmdW5jczogQ29tcGlsZXJGdW5jdGlvbjxQdXNoT3AsIGFueT5bXSA9IFtdO1xuXG4gIGFkZDxUU2V4cE9wY29kZSBleHRlbmRzIFRTZXhwT3Bjb2Rlcz4oXG4gICAgbmFtZTogVFNleHBPcGNvZGUsXG4gICAgZnVuYzogQ29tcGlsZXJGdW5jdGlvbjxQdXNoT3AsIFNleHBPcGNvZGVNYXBbVFNleHBPcGNvZGVdPlxuICApOiB2b2lkIHtcbiAgICB0aGlzLm5hbWVzW25hbWVdID0gdGhpcy5mdW5jcy5wdXNoKGZ1bmMpIC0gMTtcbiAgfVxuXG4gIGNvbXBpbGUob3A6IFB1c2hPcCwgc2V4cDogU2V4cE9wY29kZU1hcFtUU2V4cE9wY29kZXNdKTogdm9pZCB7XG4gICAgbGV0IG5hbWUgPSBzZXhwWzBdO1xuICAgIGxldCBpbmRleCA9IHRoaXMubmFtZXNbbmFtZV07XG4gICAgbGV0IGZ1bmMgPSB0aGlzLmZ1bmNzW2luZGV4XTtcbiAgICBhc3NlcnQoISFmdW5jLCBgZXhwZWN0ZWQgYW4gaW1wbGVtZW50YXRpb24gZm9yICR7c2V4cFswXX1gKTtcblxuICAgIGZ1bmMob3AsIHNleHApO1xuICB9XG59XG4iXSwic291cmNlUm9vdCI6IiJ9