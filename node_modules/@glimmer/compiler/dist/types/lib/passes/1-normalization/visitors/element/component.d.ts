import { ASTv2 } from '@glimmer/syntax';
import { Result } from '../../../../shared/result';
import * as mir from '../../../2-encoding/mir';
import { Classified, ClassifiedElement, PreparedArgs } from './classified';
export declare class ClassifiedComponent implements Classified {
    private tag;
    private element;
    readonly dynamicFeatures = true;
    constructor(tag: mir.ExpressionNode, element: ASTv2.InvokeComponent);
    arg(attr: ASTv2.ComponentArg, { state }: ClassifiedElement): Result<mir.NamedArgument>;
    toStatement(component: ClassifiedElement, { args, params }: PreparedArgs): Result<mir.Statement>;
    private blocks;
}
//# sourceMappingURL=component.d.ts.map