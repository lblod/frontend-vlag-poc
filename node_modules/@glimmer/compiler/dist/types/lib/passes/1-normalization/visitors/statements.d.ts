import { ASTv2 } from '@glimmer/syntax';
import { OptionalList } from '../../../shared/list';
import { Result } from '../../../shared/result';
import * as mir from '../../2-encoding/mir';
import { NormalizationState } from '../context';
declare class NormalizationStatements {
    visitList(nodes: readonly ASTv2.ContentNode[], state: NormalizationState): Result<OptionalList<mir.Statement>>;
    visit(node: ASTv2.ContentNode, state: NormalizationState): Result<mir.Statement | null>;
    InvokeBlock(node: ASTv2.InvokeBlock, state: NormalizationState): Result<mir.Statement>;
    NamedBlocks(blocks: ASTv2.NamedBlocks, state: NormalizationState): Result<mir.NamedBlocks>;
    NamedBlock(named: ASTv2.NamedBlock, state: NormalizationState): Result<mir.NamedBlock>;
    SimpleElement(element: ASTv2.SimpleElement, state: NormalizationState): Result<mir.Statement>;
    Component(component: ASTv2.InvokeComponent, state: NormalizationState): Result<mir.Statement>;
    AppendContent(append: ASTv2.AppendContent, state: NormalizationState): Result<mir.Statement>;
    TextNode(text: ASTv2.HtmlText): mir.Statement;
    HtmlComment(comment: ASTv2.HtmlComment): mir.Statement;
}
export declare const VISIT_STMTS: NormalizationStatements;
export {};
//# sourceMappingURL=statements.d.ts.map