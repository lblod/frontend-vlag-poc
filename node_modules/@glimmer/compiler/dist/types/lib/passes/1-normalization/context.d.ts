import { ASTv2, SymbolTable } from '@glimmer/syntax';
import { OptionalList } from '../../shared/list';
import { Result } from '../../shared/result';
import * as mir from '../2-encoding/mir';
/**
 * This is the mutable state for this compiler pass.
 */
export declare class NormalizationState {
    readonly isStrict: boolean;
    _currentScope: SymbolTable;
    _cursorCount: number;
    constructor(block: SymbolTable, isStrict: boolean);
    generateUniqueCursor(): string;
    get scope(): SymbolTable;
    visitBlock(block: ASTv2.Block): Result<OptionalList<mir.Statement>>;
}
//# sourceMappingURL=context.d.ts.map