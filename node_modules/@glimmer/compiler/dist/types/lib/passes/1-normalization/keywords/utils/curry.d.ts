import { CurriedType } from '@glimmer/interfaces';
import { ASTv2 } from '@glimmer/syntax';
import { Result } from '../../../../shared/result';
import * as mir from '../../../2-encoding/mir';
import { NormalizationState } from '../../context';
import { KeywordDelegate } from '../impl';
export declare function assertCurryKeyword(curriedType: CurriedType): (node: ASTv2.AppendContent | ASTv2.InvokeBlock | ASTv2.CallExpression, state: NormalizationState) => Result<{
    definition: ASTv2.ExpressionNode;
    args: ASTv2.Args;
}>;
export declare function curryKeyword(curriedType: CurriedType): KeywordDelegate<ASTv2.CallExpression | ASTv2.AppendContent, {
    definition: ASTv2.ExpressionNode;
    args: ASTv2.Args;
}, mir.Curry>;
//# sourceMappingURL=curry.d.ts.map