"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.toAppend = toAppend;

var mir = _interopRequireWildcard(require("../../../2-encoding/mir"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function toAppend(_ref) {
  var assert = _ref.assert,
      _translate = _ref.translate;
  return {
    assert: assert,
    translate: function translate(_ref2, value) {
      var node = _ref2.node,
          state = _ref2.state;

      var result = _translate({
        node: node,
        state: state
      }, value);

      return result.mapOk(function (text) {
        return new mir.AppendTextNode({
          text: text,
          loc: node.loc
        });
      });
    }
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL0BnbGltbWVyL2NvbXBpbGVyL2xpYi9wYXNzZXMvMS1ub3JtYWxpemF0aW9uL2tleXdvcmRzL3V0aWxzL2NhbGwtdG8tYXBwZW5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFDQTs7Ozs7O0FBSU0sU0FBQSxRQUFBLENBQUEsSUFBQSxFQUd1RDtBQUFBLE1BSGpDLE1BR2lDLEdBQUEsSUFBQSxDQUhqQyxNQUdpQztBQUFBLE1BRDNELFVBQzJELEdBQUEsSUFBQSxDQUQzRCxTQUMyRDtBQUszRCxTQUFPO0FBQ0wsSUFBQSxNQURLLEVBQUEsTUFBQTtBQUVMLElBQUEsU0FGSyxFQUFBLFNBQUEsU0FBQSxDQUFBLEtBQUEsRUFBQSxLQUFBLEVBSUs7QUFBQSxVQURSLElBQ1EsR0FBQSxLQUFBLENBRFIsSUFDUTtBQUFBLFVBREEsS0FDQSxHQUFBLEtBQUEsQ0FEQSxLQUNBOztBQUVSLFVBQUksTUFBTSxHQUFHLFVBQVMsQ0FBQztBQUFFLFFBQUEsSUFBRixFQUFBLElBQUE7QUFBUSxRQUFBLEtBQUEsRUFBQTtBQUFSLE9BQUQsRUFBdEIsS0FBc0IsQ0FBdEI7O0FBRUEsYUFBTyxNQUFNLENBQU4sS0FBQSxDQUFjLFVBQUQsSUFBQyxFQUFEO0FBQUEsZUFBVSxJQUFJLEdBQUcsQ0FBUCxjQUFBLENBQXVCO0FBQUUsVUFBQSxJQUFGLEVBQUEsSUFBQTtBQUFRLFVBQUEsR0FBRyxFQUFFLElBQUksQ0FBQztBQUFsQixTQUF2QixDQUFWO0FBQXBCLE9BQU8sQ0FBUDtBQUNEO0FBVEksR0FBUDtBQVdEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUmVzdWx0IH0gZnJvbSAnLi4vLi4vLi4vLi4vc2hhcmVkL3Jlc3VsdCc7XG5pbXBvcnQgKiBhcyBtaXIgZnJvbSAnLi4vLi4vLi4vMi1lbmNvZGluZy9taXInO1xuaW1wb3J0IHsgTm9ybWFsaXphdGlvblN0YXRlIH0gZnJvbSAnLi4vLi4vY29udGV4dCc7XG5pbXBvcnQgeyBHZW5lcmljS2V5d29yZE5vZGUsIEtleXdvcmREZWxlZ2F0ZSB9IGZyb20gJy4uL2ltcGwnO1xuXG5leHBvcnQgZnVuY3Rpb24gdG9BcHBlbmQ8VD4oe1xuICBhc3NlcnQsXG4gIHRyYW5zbGF0ZSxcbn06IEtleXdvcmREZWxlZ2F0ZTxHZW5lcmljS2V5d29yZE5vZGUsIFQsIG1pci5FeHByZXNzaW9uTm9kZT4pOiBLZXl3b3JkRGVsZWdhdGU8XG4gIEdlbmVyaWNLZXl3b3JkTm9kZSxcbiAgVCxcbiAgbWlyLkFwcGVuZFRleHROb2RlXG4+IHtcbiAgcmV0dXJuIHtcbiAgICBhc3NlcnQsXG4gICAgdHJhbnNsYXRlKFxuICAgICAgeyBub2RlLCBzdGF0ZSB9OiB7IG5vZGU6IEdlbmVyaWNLZXl3b3JkTm9kZTsgc3RhdGU6IE5vcm1hbGl6YXRpb25TdGF0ZSB9LFxuICAgICAgdmFsdWU6IFRcbiAgICApOiBSZXN1bHQ8bWlyLkFwcGVuZFRleHROb2RlPiB7XG4gICAgICBsZXQgcmVzdWx0ID0gdHJhbnNsYXRlKHsgbm9kZSwgc3RhdGUgfSwgdmFsdWUpO1xuXG4gICAgICByZXR1cm4gcmVzdWx0Lm1hcE9rKCh0ZXh0KSA9PiBuZXcgbWlyLkFwcGVuZFRleHROb2RlKHsgdGV4dCwgbG9jOiBub2RlLmxvYyB9KSk7XG4gICAgfSxcbiAgfTtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=