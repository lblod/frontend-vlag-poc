"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ClassifiedSimpleElement = void 0;

var _syntax = require("@glimmer/syntax");

var _result = require("../../../../shared/result");

var mir = _interopRequireWildcard(require("../../../2-encoding/mir"));

var _statements = require("../statements");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

class ClassifiedSimpleElement {
  constructor(tag, element, dynamicFeatures) {
    this.tag = tag;
    this.element = element;
    this.dynamicFeatures = dynamicFeatures;
    this.isComponent = false;
  }

  arg(attr) {
    return (0, _result.Err)((0, _syntax.generateSyntaxError)(`${attr.name.chars} is not a valid attribute name. @arguments are only allowed on components, but the tag for this element (\`${this.tag.chars}\`) is a regular, non-component HTML element.`, attr.loc));
  }

  toStatement(classified, {
    params
  }) {
    let {
      state,
      element
    } = classified;

    let body = _statements.VISIT_STMTS.visitList(this.element.body, state);

    return body.mapOk(body => new mir.SimpleElement({
      loc: element.loc,
      tag: this.tag,
      params,
      body: body.toArray(),
      dynamicFeatures: this.dynamicFeatures
    }));
  }

}

exports.ClassifiedSimpleElement = ClassifiedSimpleElement;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL0BnbGltbWVyL2NvbXBpbGVyL2xpYi9wYXNzZXMvMS1ub3JtYWxpemF0aW9uL3Zpc2l0b3JzL2VsZW1lbnQvc2ltcGxlLWVsZW1lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUVBOztBQUNBOztBQUNBOzs7Ozs7QUFHTSxNQUFBLHVCQUFBLENBQThCO0FBQ2xDLEVBQUEsV0FBQSxDQUFBLEdBQUEsRUFBQSxPQUFBLEVBQUEsZUFBQSxFQUdtQztBQUZ6QixTQUFBLEdBQUEsR0FBQSxHQUFBO0FBQ0EsU0FBQSxPQUFBLEdBQUEsT0FBQTtBQUNDLFNBQUEsZUFBQSxHQUFBLGVBQUE7QUFHRixTQUFBLFdBQUEsR0FBQSxLQUFBO0FBRkw7O0FBSUosRUFBQSxHQUFHLENBQUEsSUFBQSxFQUF5QjtBQUMxQixXQUFPLGlCQUNMLGlDQUNFLEdBQUcsSUFBSSxDQUFKLElBQUEsQ0FBVSxLQUFLLDhHQUE4RyxLQUFBLEdBQUEsQ0FBUyxLQUR4SCwrQ0FBbkIsRUFFRSxJQUFJLENBSFIsR0FDRSxDQURLLENBQVA7QUFNRDs7QUFFRCxFQUFBLFdBQVcsQ0FBQSxVQUFBLEVBQWdDO0FBQUUsSUFBQTtBQUFGLEdBQWhDLEVBQXdEO0FBQ2pFLFFBQUk7QUFBQSxNQUFBLEtBQUE7QUFBUyxNQUFBO0FBQVQsUUFBSixVQUFBOztBQUVBLFFBQUksSUFBSSxHQUFHLHdCQUFBLFNBQUEsQ0FBc0IsS0FBQSxPQUFBLENBQXRCLElBQUEsRUFBWCxLQUFXLENBQVg7O0FBRUEsV0FBTyxJQUFJLENBQUosS0FBQSxDQUNKLElBQUQsSUFDRSxJQUFJLEdBQUcsQ0FBUCxhQUFBLENBQXNCO0FBQ3BCLE1BQUEsR0FBRyxFQUFFLE9BQU8sQ0FEUSxHQUFBO0FBRXBCLE1BQUEsR0FBRyxFQUFFLEtBRmUsR0FBQTtBQUFBLE1BQUEsTUFBQTtBQUlwQixNQUFBLElBQUksRUFBRSxJQUFJLENBSlUsT0FJZCxFQUpjO0FBS3BCLE1BQUEsZUFBZSxFQUFFLEtBQUs7QUFMRixLQUF0QixDQUZHLENBQVA7QUFVRDs7QUFqQ2lDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQVNUdjIsIGdlbmVyYXRlU3ludGF4RXJyb3IsIFNvdXJjZVNsaWNlIH0gZnJvbSAnQGdsaW1tZXIvc3ludGF4JztcblxuaW1wb3J0IHsgRXJyLCBSZXN1bHQgfSBmcm9tICcuLi8uLi8uLi8uLi9zaGFyZWQvcmVzdWx0JztcbmltcG9ydCAqIGFzIG1pciBmcm9tICcuLi8uLi8uLi8yLWVuY29kaW5nL21pcic7XG5pbXBvcnQgeyBWSVNJVF9TVE1UUyB9IGZyb20gJy4uL3N0YXRlbWVudHMnO1xuaW1wb3J0IHsgQ2xhc3NpZmllZCwgQ2xhc3NpZmllZEVsZW1lbnQsIFByZXBhcmVkQXJncyB9IGZyb20gJy4vY2xhc3NpZmllZCc7XG5cbmV4cG9ydCBjbGFzcyBDbGFzc2lmaWVkU2ltcGxlRWxlbWVudCBpbXBsZW1lbnRzIENsYXNzaWZpZWQge1xuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIHRhZzogU291cmNlU2xpY2UsXG4gICAgcHJpdmF0ZSBlbGVtZW50OiBBU1R2Mi5TaW1wbGVFbGVtZW50LFxuICAgIHJlYWRvbmx5IGR5bmFtaWNGZWF0dXJlczogYm9vbGVhblxuICApIHt9XG5cbiAgcmVhZG9ubHkgaXNDb21wb25lbnQgPSBmYWxzZTtcblxuICBhcmcoYXR0cjogQVNUdjIuQ29tcG9uZW50QXJnKTogUmVzdWx0PG1pci5OYW1lZEFyZ3VtZW50PiB7XG4gICAgcmV0dXJuIEVycihcbiAgICAgIGdlbmVyYXRlU3ludGF4RXJyb3IoXG4gICAgICAgIGAke2F0dHIubmFtZS5jaGFyc30gaXMgbm90IGEgdmFsaWQgYXR0cmlidXRlIG5hbWUuIEBhcmd1bWVudHMgYXJlIG9ubHkgYWxsb3dlZCBvbiBjb21wb25lbnRzLCBidXQgdGhlIHRhZyBmb3IgdGhpcyBlbGVtZW50IChcXGAke3RoaXMudGFnLmNoYXJzfVxcYCkgaXMgYSByZWd1bGFyLCBub24tY29tcG9uZW50IEhUTUwgZWxlbWVudC5gLFxuICAgICAgICBhdHRyLmxvY1xuICAgICAgKVxuICAgICk7XG4gIH1cblxuICB0b1N0YXRlbWVudChjbGFzc2lmaWVkOiBDbGFzc2lmaWVkRWxlbWVudCwgeyBwYXJhbXMgfTogUHJlcGFyZWRBcmdzKTogUmVzdWx0PG1pci5TdGF0ZW1lbnQ+IHtcbiAgICBsZXQgeyBzdGF0ZSwgZWxlbWVudCB9ID0gY2xhc3NpZmllZDtcblxuICAgIGxldCBib2R5ID0gVklTSVRfU1RNVFMudmlzaXRMaXN0KHRoaXMuZWxlbWVudC5ib2R5LCBzdGF0ZSk7XG5cbiAgICByZXR1cm4gYm9keS5tYXBPayhcbiAgICAgIChib2R5KSA9PlxuICAgICAgICBuZXcgbWlyLlNpbXBsZUVsZW1lbnQoe1xuICAgICAgICAgIGxvYzogZWxlbWVudC5sb2MsXG4gICAgICAgICAgdGFnOiB0aGlzLnRhZyxcbiAgICAgICAgICBwYXJhbXMsXG4gICAgICAgICAgYm9keTogYm9keS50b0FycmF5KCksXG4gICAgICAgICAgZHluYW1pY0ZlYXR1cmVzOiB0aGlzLmR5bmFtaWNGZWF0dXJlcyxcbiAgICAgICAgfSlcbiAgICApO1xuICB9XG59XG4iXSwic291cmNlUm9vdCI6IiJ9