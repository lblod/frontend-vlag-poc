"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.OptionalList = OptionalList;
exports.EmptyList = exports.PresentList = void 0;

var _util = require("@glimmer/util");

class PresentList {
  constructor(list) {
    this.list = list;
  }

  toArray() {
    return this.list;
  }

  map(callback) {
    let result = (0, _util.mapPresent)(this.list, callback);
    return new PresentList(result);
  }

  filter(predicate) {
    let out = [];

    for (let item of this.list) {
      if (predicate(item)) {
        out.push(item);
      }
    }

    return OptionalList(out);
  }

  toPresentArray() {
    return this.list;
  }

  into({
    ifPresent
  }) {
    return ifPresent(this);
  }

}

exports.PresentList = PresentList;

class EmptyList {
  constructor() {
    this.list = [];
  }

  map(_callback) {
    return new EmptyList();
  }

  filter(_predicate) {
    return new EmptyList();
  }

  toArray() {
    return this.list;
  }

  toPresentArray() {
    return null;
  }

  into({
    ifEmpty
  }) {
    return ifEmpty();
  }

} // export type OptionalList<T> = PresentList<T> | EmptyList<T>;


exports.EmptyList = EmptyList;

function OptionalList(value) {
  if ((0, _util.isPresent)(value)) {
    return new PresentList(value);
  } else {
    return new EmptyList();
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL0BnbGltbWVyL2NvbXBpbGVyL2xpYi9zaGFyZWQvbGlzdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUNBOztBQVlNLE1BQUEsV0FBQSxDQUFrQjtBQUN0QixFQUFBLFdBQUEsQ0FBQSxJQUFBLEVBQTBDO0FBQXJCLFNBQUEsSUFBQSxHQUFBLElBQUE7QUFBeUI7O0FBRTlDLEVBQUEsT0FBTyxHQUFBO0FBQ0wsV0FBTyxLQUFQLElBQUE7QUFDRDs7QUFFRCxFQUFBLEdBQUcsQ0FBQSxRQUFBLEVBQTZCO0FBQzlCLFFBQUksTUFBTSxHQUFHLHNCQUFXLEtBQUQsSUFBVixFQUFiLFFBQWEsQ0FBYjtBQUNBLFdBQU8sSUFBQSxXQUFBLENBQVAsTUFBTyxDQUFQO0FBQ0Q7O0FBRUQsRUFBQSxNQUFNLENBQUEsU0FBQSxFQUFpRDtBQUNyRCxRQUFJLEdBQUcsR0FBUCxFQUFBOztBQUVBLFNBQUssSUFBTCxJQUFBLElBQWlCLEtBQWpCLElBQUEsRUFBNEI7QUFDMUIsVUFBSSxTQUFTLENBQWIsSUFBYSxDQUFiLEVBQXFCO0FBQ25CLFFBQUEsR0FBRyxDQUFILElBQUEsQ0FBQSxJQUFBO0FBQ0Q7QUFDRjs7QUFFRCxXQUFPLFlBQVksQ0FBbkIsR0FBbUIsQ0FBbkI7QUFDRDs7QUFFRCxFQUFBLGNBQWMsR0FBQTtBQUNaLFdBQU8sS0FBUCxJQUFBO0FBQ0Q7O0FBRUQsRUFBQSxJQUFJLENBQU87QUFBRSxJQUFBO0FBQUYsR0FBUCxFQUFtRjtBQUNyRixXQUFPLFNBQVMsQ0FBaEIsSUFBZ0IsQ0FBaEI7QUFDRDs7QUE5QnFCOzs7O0FBaUNsQixNQUFBLFNBQUEsQ0FBZ0I7QUFBdEIsRUFBQSxXQUFBLEdBQUE7QUFDVyxTQUFBLElBQUEsR0FBQSxFQUFBO0FBcUJWOztBQW5CQyxFQUFBLEdBQUcsQ0FBQSxTQUFBLEVBQThCO0FBQy9CLFdBQU8sSUFBUCxTQUFPLEVBQVA7QUFDRDs7QUFFRCxFQUFBLE1BQU0sQ0FBQSxVQUFBLEVBQWtEO0FBQ3RELFdBQU8sSUFBUCxTQUFPLEVBQVA7QUFDRDs7QUFFRCxFQUFBLE9BQU8sR0FBQTtBQUNMLFdBQU8sS0FBUCxJQUFBO0FBQ0Q7O0FBRUQsRUFBQSxjQUFjLEdBQUE7QUFDWixXQUFBLElBQUE7QUFDRDs7QUFFRCxFQUFBLElBQUksQ0FBTztBQUFFLElBQUE7QUFBRixHQUFQLEVBQWlGO0FBQ25GLFdBQU8sT0FBUCxFQUFBO0FBQ0Q7O0FBckJtQixDLENBd0J0Qjs7Ozs7QUFFTSxTQUFBLFlBQUEsQ0FBQSxLQUFBLEVBQTZDO0FBQ2pELE1BQUkscUJBQUosS0FBSSxDQUFKLEVBQXNCO0FBQ3BCLFdBQU8sSUFBQSxXQUFBLENBQVAsS0FBTyxDQUFQO0FBREYsR0FBQSxNQUVPO0FBQ0wsV0FBTyxJQUFQLFNBQU8sRUFBUDtBQUNEO0FBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBPcHRpb24sIFByZXNlbnRBcnJheSB9IGZyb20gJ0BnbGltbWVyL2ludGVyZmFjZXMnO1xuaW1wb3J0IHsgaXNQcmVzZW50LCBtYXBQcmVzZW50IH0gZnJvbSAnQGdsaW1tZXIvdXRpbCc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgT3B0aW9uYWxMaXN0PFQ+IHtcbiAgbWFwPFU+KGNhbGxiYWNrOiAoaW5wdXQ6IFQpID0+IFUpOiBNYXBMaXN0PFQsIFUsIEFueU9wdGlvbmFsTGlzdDxUPj47XG4gIGZpbHRlcjxTIGV4dGVuZHMgVD4oXG4gICAgcHJlZGljYXRlOiAodmFsdWU6IFQsIGluZGV4OiBudW1iZXIsIGFycmF5OiBUW10pID0+IHZhbHVlIGlzIFNcbiAgKTogQW55T3B0aW9uYWxMaXN0PFM+O1xuICB0b0FycmF5KCk6IFRbXTtcbiAgdG9QcmVzZW50QXJyYXkoKTogT3B0aW9uPFByZXNlbnRBcnJheTxUPj47XG4gIGludG88VSwgVj4ob3B0aW9uczogeyBpZlByZXNlbnQ6IChhcnJheTogUHJlc2VudExpc3Q8VD4pID0+IFU7IGlmRW1wdHk6ICgpID0+IFYgfSk6IFUgfCBWO1xufVxuXG5leHBvcnQgY2xhc3MgUHJlc2VudExpc3Q8VD4gaW1wbGVtZW50cyBPcHRpb25hbExpc3Q8VD4ge1xuICBjb25zdHJ1Y3RvcihyZWFkb25seSBsaXN0OiBQcmVzZW50QXJyYXk8VD4pIHt9XG5cbiAgdG9BcnJheSgpOiBQcmVzZW50QXJyYXk8VD4ge1xuICAgIHJldHVybiB0aGlzLmxpc3Q7XG4gIH1cblxuICBtYXA8VT4oY2FsbGJhY2s6IChpbnB1dDogVCkgPT4gVSk6IE1hcExpc3Q8VCwgVSwgUHJlc2VudExpc3Q8VD4+IHtcbiAgICBsZXQgcmVzdWx0ID0gbWFwUHJlc2VudCh0aGlzLmxpc3QsIGNhbGxiYWNrKTtcbiAgICByZXR1cm4gbmV3IFByZXNlbnRMaXN0KHJlc3VsdCkgYXMgTWFwTGlzdDxULCBVLCB0aGlzPjtcbiAgfVxuXG4gIGZpbHRlcjxTIGV4dGVuZHMgVD4ocHJlZGljYXRlOiAodmFsdWU6IFQpID0+IHZhbHVlIGlzIFMpOiBBbnlPcHRpb25hbExpc3Q8Uz4ge1xuICAgIGxldCBvdXQ6IFNbXSA9IFtdO1xuXG4gICAgZm9yIChsZXQgaXRlbSBvZiB0aGlzLmxpc3QpIHtcbiAgICAgIGlmIChwcmVkaWNhdGUoaXRlbSkpIHtcbiAgICAgICAgb3V0LnB1c2goaXRlbSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIE9wdGlvbmFsTGlzdChvdXQpO1xuICB9XG5cbiAgdG9QcmVzZW50QXJyYXkoKTogUHJlc2VudEFycmF5PFQ+IHtcbiAgICByZXR1cm4gdGhpcy5saXN0O1xuICB9XG5cbiAgaW50bzxVLCBWPih7IGlmUHJlc2VudCB9OiB7IGlmUHJlc2VudDogKGFycmF5OiBQcmVzZW50TGlzdDxUPikgPT4gVTsgaWZFbXB0eTogKCkgPT4gViB9KTogVSB8IFYge1xuICAgIHJldHVybiBpZlByZXNlbnQodGhpcyk7XG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIEVtcHR5TGlzdDxUPiBpbXBsZW1lbnRzIE9wdGlvbmFsTGlzdDxUPiB7XG4gIHJlYWRvbmx5IGxpc3Q6IFRbXSA9IFtdO1xuXG4gIG1hcDxVPihfY2FsbGJhY2s6IChpbnB1dDogVCkgPT4gVSk6IE1hcExpc3Q8VCwgVSwgRW1wdHlMaXN0PFQ+PiB7XG4gICAgcmV0dXJuIG5ldyBFbXB0eUxpc3QoKSBhcyBNYXBMaXN0PFQsIFUsIHRoaXM+O1xuICB9XG5cbiAgZmlsdGVyPFMgZXh0ZW5kcyBUPihfcHJlZGljYXRlOiAodmFsdWU6IFQpID0+IHZhbHVlIGlzIFMpOiBBbnlPcHRpb25hbExpc3Q8Uz4ge1xuICAgIHJldHVybiBuZXcgRW1wdHlMaXN0KCk7XG4gIH1cblxuICB0b0FycmF5KCk6IFRbXSB7XG4gICAgcmV0dXJuIHRoaXMubGlzdDtcbiAgfVxuXG4gIHRvUHJlc2VudEFycmF5KCk6IE9wdGlvbjxQcmVzZW50QXJyYXk8VD4+IHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIGludG88VSwgVj4oeyBpZkVtcHR5IH06IHsgaWZQcmVzZW50OiAoYXJyYXk6IFByZXNlbnRMaXN0PFQ+KSA9PiBVOyBpZkVtcHR5OiAoKSA9PiBWIH0pOiBVIHwgViB7XG4gICAgcmV0dXJuIGlmRW1wdHkoKTtcbiAgfVxufVxuXG4vLyBleHBvcnQgdHlwZSBPcHRpb25hbExpc3Q8VD4gPSBQcmVzZW50TGlzdDxUPiB8IEVtcHR5TGlzdDxUPjtcblxuZXhwb3J0IGZ1bmN0aW9uIE9wdGlvbmFsTGlzdDxUPih2YWx1ZTogcmVhZG9ubHkgVFtdKTogQW55T3B0aW9uYWxMaXN0PFQ+IHtcbiAgaWYgKGlzUHJlc2VudCh2YWx1ZSkpIHtcbiAgICByZXR1cm4gbmV3IFByZXNlbnRMaXN0KHZhbHVlKTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gbmV3IEVtcHR5TGlzdDxUPigpO1xuICB9XG59XG5cbmV4cG9ydCB0eXBlIEFueU9wdGlvbmFsTGlzdDxUPiA9IChQcmVzZW50TGlzdDxUPiB8IEVtcHR5TGlzdDxUPikgJiBPcHRpb25hbExpc3Q8VD47XG5cbmV4cG9ydCB0eXBlIE1hcExpc3Q8VCwgVSwgTCBleHRlbmRzIE9wdGlvbmFsTGlzdDxUPj4gPSBMIGV4dGVuZHMgUHJlc2VudExpc3Q8VD5cbiAgPyBQcmVzZW50TGlzdDxVPlxuICA6IEwgZXh0ZW5kcyBFbXB0eUxpc3Q8VD5cbiAgPyBFbXB0eUxpc3Q8VT5cbiAgOiBuZXZlcjtcbiJdLCJzb3VyY2VSb290IjoiIn0=