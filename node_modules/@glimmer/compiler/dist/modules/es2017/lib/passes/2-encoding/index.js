import { LOCAL_LOGGER } from '@glimmer/util';
import WireFormatDebugger from '../../wire-format-debug';
import { CONTENT } from './content';
export function visit(template) {
  let statements = CONTENT.list(template.body);
  let scope = template.scope;
  let block = [statements, scope.symbols, scope.hasEval, scope.upvars];

  if (false
  /* LOCAL_SHOULD_LOG */
  ) {
    let debug = new WireFormatDebugger(block);
    LOCAL_LOGGER.log(`-> `, statements.map(s => debug.formatOpcode(s)));
  }

  return block;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL0BnbGltbWVyL2NvbXBpbGVyL2xpYi9wYXNzZXMvMi1lbmNvZGluZy9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxTQUFTLFlBQVQsUUFBNkIsZUFBN0I7QUFFQSxPQUFPLGtCQUFQLE1BQStCLHlCQUEvQjtBQUNBLFNBQVMsT0FBVCxRQUF3QixXQUF4QjtBQUdBLE9BQU0sU0FBVSxLQUFWLENBQWdCLFFBQWhCLEVBQXNDO0FBQzFDLE1BQUksVUFBVSxHQUFHLE9BQU8sQ0FBQyxJQUFSLENBQWEsUUFBUSxDQUFDLElBQXRCLENBQWpCO0FBQ0EsTUFBSSxLQUFLLEdBQUcsUUFBUSxDQUFDLEtBQXJCO0FBQ0EsTUFBSSxLQUFLLEdBQXVDLENBQzlDLFVBRDhDLEVBRTlDLEtBQUssQ0FBQyxPQUZ3QyxFQUc5QyxLQUFLLENBQUMsT0FId0MsRUFJOUMsS0FBSyxDQUFDLE1BSndDLENBQWhEOztBQU9BO0FBQUE7QUFBQSxJQUFzQjtBQUNwQixRQUFJLEtBQUssR0FBRyxJQUFJLGtCQUFKLENBQXVCLEtBQXZCLENBQVo7QUFDQSxJQUFBLFlBQVksQ0FBQyxHQUFiLENBQ0UsS0FERixFQUVFLFVBQVUsQ0FBQyxHQUFYLENBQWdCLENBQUQsSUFBTyxLQUFLLENBQUMsWUFBTixDQUFtQixDQUFuQixDQUF0QixDQUZGO0FBSUQ7O0FBRUQsU0FBTyxLQUFQO0FBQ0QiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBXaXJlRm9ybWF0IH0gZnJvbSAnQGdsaW1tZXIvaW50ZXJmYWNlcyc7XG5pbXBvcnQgeyBMT0NBTF9TSE9VTERfTE9HIH0gZnJvbSAnQGdsaW1tZXIvbG9jYWwtZGVidWctZmxhZ3MnO1xuaW1wb3J0IHsgTE9DQUxfTE9HR0VSIH0gZnJvbSAnQGdsaW1tZXIvdXRpbCc7XG5cbmltcG9ydCBXaXJlRm9ybWF0RGVidWdnZXIgZnJvbSAnLi4vLi4vd2lyZS1mb3JtYXQtZGVidWcnO1xuaW1wb3J0IHsgQ09OVEVOVCB9IGZyb20gJy4vY29udGVudCc7XG5pbXBvcnQgKiBhcyBtaXIgZnJvbSAnLi9taXInO1xuXG5leHBvcnQgZnVuY3Rpb24gdmlzaXQodGVtcGxhdGU6IG1pci5UZW1wbGF0ZSk6IFdpcmVGb3JtYXQuU2VyaWFsaXplZFRlbXBsYXRlQmxvY2sge1xuICBsZXQgc3RhdGVtZW50cyA9IENPTlRFTlQubGlzdCh0ZW1wbGF0ZS5ib2R5KTtcbiAgbGV0IHNjb3BlID0gdGVtcGxhdGUuc2NvcGU7XG4gIGxldCBibG9jazogV2lyZUZvcm1hdC5TZXJpYWxpemVkVGVtcGxhdGVCbG9jayA9IFtcbiAgICBzdGF0ZW1lbnRzLFxuICAgIHNjb3BlLnN5bWJvbHMsXG4gICAgc2NvcGUuaGFzRXZhbCxcbiAgICBzY29wZS51cHZhcnMsXG4gIF07XG5cbiAgaWYgKExPQ0FMX1NIT1VMRF9MT0cpIHtcbiAgICBsZXQgZGVidWcgPSBuZXcgV2lyZUZvcm1hdERlYnVnZ2VyKGJsb2NrKTtcbiAgICBMT0NBTF9MT0dHRVIubG9nKFxuICAgICAgYC0+IGAsXG4gICAgICBzdGF0ZW1lbnRzLm1hcCgocykgPT4gZGVidWcuZm9ybWF0T3Bjb2RlKHMpKVxuICAgICk7XG4gIH1cblxuICByZXR1cm4gYmxvY2s7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9