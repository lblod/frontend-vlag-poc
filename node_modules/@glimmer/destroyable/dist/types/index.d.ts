import { Destroyable, Destructor } from '@glimmer/interfaces';
export declare function associateDestroyableChild<T extends Destroyable>(parent: Destroyable, child: T): T;
export declare function registerDestructor<T extends Destroyable>(destroyable: T, destructor: Destructor<T>, eager?: boolean): Destructor<T>;
export declare function unregisterDestructor<T extends Destroyable>(destroyable: T, destructor: Destructor<T>, eager?: boolean): void;
export declare function destroy(destroyable: Destroyable): void;
export declare function destroyChildren(destroyable: Destroyable): void;
export declare function _hasDestroyableChildren(destroyable: Destroyable): boolean;
export declare function isDestroying(destroyable: Destroyable): boolean;
export declare function isDestroyed(destroyable: Destroyable): boolean;
export declare let enableDestroyableTracking: undefined | (() => void);
export declare let assertDestroyablesDestroyed: undefined | (() => void);
//# sourceMappingURL=index.d.ts.map