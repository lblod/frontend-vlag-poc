import { DEBUG } from '@glimmer/env';
export var InstructionEncoderImpl = /*#__PURE__*/function () {
  function InstructionEncoderImpl(buffer) {
    this.buffer = buffer;
    this.size = 0;
  }

  var _proto = InstructionEncoderImpl.prototype;

  _proto.encode = function encode(type, machine) {
    if (type > 255
    /* TYPE_SIZE */
    ) {
        throw new Error("Opcode type over 8-bits. Got " + type + ".");
      }

    var first = type | machine | arguments.length - 2 << 8
    /* ARG_SHIFT */
    ;
    this.buffer.push(first);

    for (var i = 2; i < arguments.length; i++) {
      var op = arguments[i];

      if (DEBUG && typeof op === 'number' && op > 2147483647
      /* MAX_SIZE */
      ) {
          throw new Error("Operand over 32-bits. Got " + op + ".");
        }

      this.buffer.push(op);
    }

    this.size = this.buffer.length;
  };

  _proto.patch = function patch(position, target) {
    if (this.buffer[position + 1] === -1) {
      this.buffer[position + 1] = target;
    } else {
      throw new Error('Trying to patch operand in populated slot instead of a reserved slot.');
    }
  };

  return InstructionEncoderImpl;
}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3BhY2thZ2VzL0BnbGltbWVyL2VuY29kZXIvbGliL2VuY29kZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsU0FBQSxLQUFBLFFBQUEsY0FBQTtBQVVBLFdBQU0sc0JBQU47QUFDRSxrQ0FBQSxNQUFBLEVBQTJDO0FBQXRCLFNBQUEsTUFBQSxHQUFBLE1BQUE7QUFFckIsU0FBQSxJQUFBLEdBQUEsQ0FBQTtBQUYrQzs7QUFEakQ7O0FBQUEsU0FPRSxNQVBGLEdBT0UsZ0JBQU0sSUFBTixFQUFNLE9BQU4sRUFBaUU7QUFDL0QsUUFBSyxJQUFlLEdBQUE7QUFBQTtBQUFwQixNQUE2QztBQUMzQyxjQUFNLElBQUEsS0FBQSxtQ0FBTixJQUFNLE9BQU47QUFDRDs7QUFFRCxRQUFJLEtBQUssR0FBRyxJQUFJLEdBQUosT0FBQSxHQUFtQixTQUFTLENBQVQsTUFBQSxHQUFELENBQUMsSUFBcUI7QUFBQTtBQUFwRDtBQUVBLFNBQUEsTUFBQSxDQUFBLElBQUEsQ0FBQSxLQUFBOztBQUVBLFNBQUssSUFBSSxDQUFDLEdBQVYsQ0FBQSxFQUFnQixDQUFDLEdBQUcsU0FBUyxDQUE3QixNQUFBLEVBQXNDLENBQXRDLEVBQUEsRUFBMkM7QUFDekMsVUFBSSxFQUFFLEdBQUcsU0FBUyxDQUFsQixDQUFrQixDQUFsQjs7QUFDQSxVQUFJLEtBQUssSUFBSSxPQUFBLEVBQUEsS0FBVCxRQUFBLElBQW1DLEVBQUUsR0FBQTtBQUFBO0FBQXpDLFFBQWlFO0FBQy9ELGdCQUFNLElBQUEsS0FBQSxnQ0FBTixFQUFNLE9BQU47QUFDRDs7QUFDRCxXQUFBLE1BQUEsQ0FBQSxJQUFBLENBQUEsRUFBQTtBQUNEOztBQUVELFNBQUEsSUFBQSxHQUFZLEtBQUEsTUFBQSxDQUFaLE1BQUE7QUFDRCxHQXpCSDs7QUFBQSxTQTJCRSxLQTNCRixHQTJCRSxlQUFLLFFBQUwsRUFBSyxNQUFMLEVBQXNDO0FBQ3BDLFFBQUksS0FBQSxNQUFBLENBQVksUUFBUSxHQUFwQixDQUFBLE1BQThCLENBQWxDLENBQUEsRUFBc0M7QUFDcEMsV0FBQSxNQUFBLENBQVksUUFBUSxHQUFwQixDQUFBLElBQUEsTUFBQTtBQURGLEtBQUEsTUFFTztBQUNMLFlBQU0sSUFBQSxLQUFBLENBQU4sdUVBQU0sQ0FBTjtBQUNEO0FBQ0YsR0FqQ0g7O0FBQUE7QUFBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERFQlVHIH0gZnJvbSAnQGdsaW1tZXIvZW52JztcbmltcG9ydCB7XG4gIENvbXBpbGVyQnVmZmVyLFxuICBPcGVyYW5kLFxuICBNYWNoaW5lT3AsXG4gIE9wLFxuICBJbnN0cnVjdGlvbkVuY29kZXIsXG4gIE9wY29kZVNpemUsXG59IGZyb20gJ0BnbGltbWVyL2ludGVyZmFjZXMnO1xuXG5leHBvcnQgY2xhc3MgSW5zdHJ1Y3Rpb25FbmNvZGVySW1wbCBpbXBsZW1lbnRzIEluc3RydWN0aW9uRW5jb2RlciB7XG4gIGNvbnN0cnVjdG9yKHJlYWRvbmx5IGJ1ZmZlcjogQ29tcGlsZXJCdWZmZXIpIHt9XG5cbiAgc2l6ZSA9IDA7XG5cbiAgZW5jb2RlKHR5cGU6IE1hY2hpbmVPcCwgbWFjaGluZTogT3Bjb2RlU2l6ZS5NQUNISU5FX01BU0ssIC4uLm9wZXJhbmRzOiBPcGVyYW5kW10pOiB2b2lkO1xuICBlbmNvZGUodHlwZTogT3AsIG1hY2hpbmU6IDAsIC4uLm9wZXJhbmRzOiBPcGVyYW5kW10pOiB2b2lkO1xuICBlbmNvZGUodHlwZTogT3AgfCBNYWNoaW5lT3AsIG1hY2hpbmU6IDAgfCBPcGNvZGVTaXplLk1BQ0hJTkVfTUFTSykge1xuICAgIGlmICgodHlwZSBhcyBudW1iZXIpID4gT3Bjb2RlU2l6ZS5UWVBFX1NJWkUpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgT3Bjb2RlIHR5cGUgb3ZlciA4LWJpdHMuIEdvdCAke3R5cGV9LmApO1xuICAgIH1cblxuICAgIGxldCBmaXJzdCA9IHR5cGUgfCBtYWNoaW5lIHwgKChhcmd1bWVudHMubGVuZ3RoIC0gMikgPDwgT3Bjb2RlU2l6ZS5BUkdfU0hJRlQpO1xuXG4gICAgdGhpcy5idWZmZXIucHVzaChmaXJzdCk7XG5cbiAgICBmb3IgKGxldCBpID0gMjsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgbGV0IG9wID0gYXJndW1lbnRzW2ldO1xuICAgICAgaWYgKERFQlVHICYmIHR5cGVvZiBvcCA9PT0gJ251bWJlcicgJiYgb3AgPiBPcGNvZGVTaXplLk1BWF9TSVpFKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgT3BlcmFuZCBvdmVyIDMyLWJpdHMuIEdvdCAke29wfS5gKTtcbiAgICAgIH1cbiAgICAgIHRoaXMuYnVmZmVyLnB1c2gob3ApO1xuICAgIH1cblxuICAgIHRoaXMuc2l6ZSA9IHRoaXMuYnVmZmVyLmxlbmd0aDtcbiAgfVxuXG4gIHBhdGNoKHBvc2l0aW9uOiBudW1iZXIsIHRhcmdldDogbnVtYmVyKSB7XG4gICAgaWYgKHRoaXMuYnVmZmVyW3Bvc2l0aW9uICsgMV0gPT09IC0xKSB7XG4gICAgICB0aGlzLmJ1ZmZlcltwb3NpdGlvbiArIDFdID0gdGFyZ2V0O1xuICAgIH0gZWxzZSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ1RyeWluZyB0byBwYXRjaCBvcGVyYW5kIGluIHBvcHVsYXRlZCBzbG90IGluc3RlYWQgb2YgYSByZXNlcnZlZCBzbG90LicpO1xuICAgIH1cbiAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==