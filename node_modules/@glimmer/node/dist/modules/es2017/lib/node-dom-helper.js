import { ConcreteBounds, DOMTreeConstruction } from '@glimmer/runtime';
import createHTMLDocument from '@simple-dom/document';
export default class NodeDOMTreeConstruction extends DOMTreeConstruction {
  constructor(doc) {
    super(doc || createHTMLDocument());
  } // override to prevent usage of `this.document` until after the constructor


  setupUselessElement() {}

  insertHTMLBefore(parent, reference, html) {
    let raw = this.document.createRawHTMLSection(html);
    parent.insertBefore(raw, reference);
    return new ConcreteBounds(parent, raw, raw);
  } // override to avoid SVG detection/work when in node (this is not needed in SSR)


  createElement(tag) {
    return this.document.createElement(tag);
  } // override to avoid namespace shenanigans when in node (this is not needed in SSR)


  setAttribute(element, name, value) {
    element.setAttribute(name, value);
  }

}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3BhY2thZ2VzL0BnbGltbWVyL25vZGUvbGliL25vZGUtZG9tLWhlbHBlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxTQUFTLGNBQVQsRUFBeUIsbUJBQXpCLFFBQW9ELGtCQUFwRDtBQUNBLE9BQU8sa0JBQVAsTUFBK0Isc0JBQS9CO0FBR0EsZUFBYyxNQUFPLHVCQUFQLFNBQXVDLG1CQUF2QyxDQUEwRDtBQUV0RSxFQUFBLFdBQUEsQ0FBWSxHQUFaLEVBQXVDO0FBQ3JDLFVBQU0sR0FBRyxJQUFJLGtCQUFrQixFQUEvQjtBQUNELEdBSnFFLENBTXRFOzs7QUFDVSxFQUFBLG1CQUFtQixHQUFBLENBQUs7O0FBRWxDLEVBQUEsZ0JBQWdCLENBQUMsTUFBRCxFQUF3QixTQUF4QixFQUF1RCxJQUF2RCxFQUFtRTtBQUNqRixRQUFJLEdBQUcsR0FBRyxLQUFLLFFBQUwsQ0FBYyxvQkFBZCxDQUFvQyxJQUFwQyxDQUFWO0FBQ0EsSUFBQSxNQUFNLENBQUMsWUFBUCxDQUFvQixHQUFwQixFQUF5QixTQUF6QjtBQUNBLFdBQU8sSUFBSSxjQUFKLENBQW1CLE1BQW5CLEVBQTJCLEdBQTNCLEVBQWdDLEdBQWhDLENBQVA7QUFDRCxHQWJxRSxDQWV0RTs7O0FBQ0EsRUFBQSxhQUFhLENBQUMsR0FBRCxFQUFZO0FBQ3ZCLFdBQU8sS0FBSyxRQUFMLENBQWMsYUFBZCxDQUE0QixHQUE1QixDQUFQO0FBQ0QsR0FsQnFFLENBb0J0RTs7O0FBQ0EsRUFBQSxZQUFZLENBQUMsT0FBRCxFQUF5QixJQUF6QixFQUF1QyxLQUF2QyxFQUFvRDtBQUM5RCxJQUFBLE9BQU8sQ0FBQyxZQUFSLENBQXFCLElBQXJCLEVBQTJCLEtBQTNCO0FBQ0Q7O0FBdkJxRSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJvdW5kcywgT3B0aW9uIH0gZnJvbSAnQGdsaW1tZXIvaW50ZXJmYWNlcyc7XG5pbXBvcnQgeyBDb25jcmV0ZUJvdW5kcywgRE9NVHJlZUNvbnN0cnVjdGlvbiB9IGZyb20gJ0BnbGltbWVyL3J1bnRpbWUnO1xuaW1wb3J0IGNyZWF0ZUhUTUxEb2N1bWVudCBmcm9tICdAc2ltcGxlLWRvbS9kb2N1bWVudCc7XG5pbXBvcnQgeyBTaW1wbGVEb2N1bWVudCwgU2ltcGxlRWxlbWVudCwgU2ltcGxlTm9kZSB9IGZyb20gJ0BzaW1wbGUtZG9tL2ludGVyZmFjZSc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE5vZGVET01UcmVlQ29uc3RydWN0aW9uIGV4dGVuZHMgRE9NVHJlZUNvbnN0cnVjdGlvbiB7XG4gIHByb3RlY3RlZCBkb2N1bWVudCE6IFNpbXBsZURvY3VtZW50OyAvLyBIaWRlcyBwcm9wZXJ0eSBvbiBiYXNlIGNsYXNzXG4gIGNvbnN0cnVjdG9yKGRvYzogT3B0aW9uPFNpbXBsZURvY3VtZW50Pikge1xuICAgIHN1cGVyKGRvYyB8fCBjcmVhdGVIVE1MRG9jdW1lbnQoKSk7XG4gIH1cblxuICAvLyBvdmVycmlkZSB0byBwcmV2ZW50IHVzYWdlIG9mIGB0aGlzLmRvY3VtZW50YCB1bnRpbCBhZnRlciB0aGUgY29uc3RydWN0b3JcbiAgcHJvdGVjdGVkIHNldHVwVXNlbGVzc0VsZW1lbnQoKSB7fVxuXG4gIGluc2VydEhUTUxCZWZvcmUocGFyZW50OiBTaW1wbGVFbGVtZW50LCByZWZlcmVuY2U6IE9wdGlvbjxTaW1wbGVOb2RlPiwgaHRtbDogc3RyaW5nKTogQm91bmRzIHtcbiAgICBsZXQgcmF3ID0gdGhpcy5kb2N1bWVudC5jcmVhdGVSYXdIVE1MU2VjdGlvbiEoaHRtbCk7XG4gICAgcGFyZW50Lmluc2VydEJlZm9yZShyYXcsIHJlZmVyZW5jZSk7XG4gICAgcmV0dXJuIG5ldyBDb25jcmV0ZUJvdW5kcyhwYXJlbnQsIHJhdywgcmF3KTtcbiAgfVxuXG4gIC8vIG92ZXJyaWRlIHRvIGF2b2lkIFNWRyBkZXRlY3Rpb24vd29yayB3aGVuIGluIG5vZGUgKHRoaXMgaXMgbm90IG5lZWRlZCBpbiBTU1IpXG4gIGNyZWF0ZUVsZW1lbnQodGFnOiBzdHJpbmcpIHtcbiAgICByZXR1cm4gdGhpcy5kb2N1bWVudC5jcmVhdGVFbGVtZW50KHRhZyk7XG4gIH1cblxuICAvLyBvdmVycmlkZSB0byBhdm9pZCBuYW1lc3BhY2Ugc2hlbmFuaWdhbnMgd2hlbiBpbiBub2RlICh0aGlzIGlzIG5vdCBuZWVkZWQgaW4gU1NSKVxuICBzZXRBdHRyaWJ1dGUoZWxlbWVudDogU2ltcGxlRWxlbWVudCwgbmFtZTogc3RyaW5nLCB2YWx1ZTogc3RyaW5nKSB7XG4gICAgZWxlbWVudC5zZXRBdHRyaWJ1dGUobmFtZSwgdmFsdWUpO1xuICB9XG59XG4iXSwic291cmNlUm9vdCI6IiJ9