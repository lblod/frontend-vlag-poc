"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _runtime = require("@glimmer/runtime");

var _document = _interopRequireDefault(require("@simple-dom/document"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  subClass.__proto__ = superClass;
}

var NodeDOMTreeConstruction = /*#__PURE__*/function (_DOMTreeConstruction) {
  _inheritsLoose(NodeDOMTreeConstruction, _DOMTreeConstruction);

  function NodeDOMTreeConstruction(doc) {
    return _DOMTreeConstruction.call(this, doc || (0, _document.default)()) || this;
  } // override to prevent usage of `this.document` until after the constructor


  var _proto = NodeDOMTreeConstruction.prototype;

  _proto.setupUselessElement = function setupUselessElement() {};

  _proto.insertHTMLBefore = function insertHTMLBefore(parent, reference, html) {
    var raw = this.document.createRawHTMLSection(html);
    parent.insertBefore(raw, reference);
    return new _runtime.ConcreteBounds(parent, raw, raw);
  } // override to avoid SVG detection/work when in node (this is not needed in SSR)
  ;

  _proto.createElement = function createElement(tag) {
    return this.document.createElement(tag);
  } // override to avoid namespace shenanigans when in node (this is not needed in SSR)
  ;

  _proto.setAttribute = function setAttribute(element, name, value) {
    element.setAttribute(name, value);
  };

  return NodeDOMTreeConstruction;
}(_runtime.DOMTreeConstruction);

exports.default = NodeDOMTreeConstruction;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3BhY2thZ2VzL0BnbGltbWVyL25vZGUvbGliL25vZGUtZG9tLWhlbHBlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQ0E7O0FBQ0E7Ozs7Ozs7Ozs7SUFHYyx1Qjs7O0FBRVosV0FBQSx1QkFBQSxDQUFBLEdBQUEsRUFBdUM7QUFBQSxXQUNyQyxvQkFBQSxDQUFBLElBQUEsQ0FBQSxJQUFBLEVBQU0sR0FBRyxJQUQ0Qix3QkFDckMsS0FEcUMsSUFBQTtJQUl2Qzs7Ozs7U0FDVSxtQixHQUFBLFNBQUEsbUJBQUEsR0FBbUIsQzs7U0FFN0IsZ0IsR0FBQSxTQUFBLGdCQUFBLENBQUEsTUFBQSxFQUFBLFNBQUEsRUFBQSxJQUFBLEVBQW1GO0FBQ2pGLFFBQUksR0FBRyxHQUFHLEtBQUEsUUFBQSxDQUFBLG9CQUFBLENBQVYsSUFBVSxDQUFWO0FBQ0EsSUFBQSxNQUFNLENBQU4sWUFBQSxDQUFBLEdBQUEsRUFBQSxTQUFBO0FBQ0EsV0FBTyxJQUFBLHVCQUFBLENBQUEsTUFBQSxFQUFBLEdBQUEsRUFBUCxHQUFPLENBQVA7SUFHRjs7O1NBQ0EsYSxHQUFBLFNBQUEsYUFBQSxDQUFBLEdBQUEsRUFBeUI7QUFDdkIsV0FBTyxLQUFBLFFBQUEsQ0FBQSxhQUFBLENBQVAsR0FBTyxDQUFQO0lBR0Y7OztTQUNBLFksR0FBQSxTQUFBLFlBQUEsQ0FBQSxPQUFBLEVBQUEsSUFBQSxFQUFBLEtBQUEsRUFBZ0U7QUFDOUQsSUFBQSxPQUFPLENBQVAsWUFBQSxDQUFBLElBQUEsRUFBQSxLQUFBOzs7O0VBdEJVLDRCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQm91bmRzLCBPcHRpb24gfSBmcm9tICdAZ2xpbW1lci9pbnRlcmZhY2VzJztcbmltcG9ydCB7IENvbmNyZXRlQm91bmRzLCBET01UcmVlQ29uc3RydWN0aW9uIH0gZnJvbSAnQGdsaW1tZXIvcnVudGltZSc7XG5pbXBvcnQgY3JlYXRlSFRNTERvY3VtZW50IGZyb20gJ0BzaW1wbGUtZG9tL2RvY3VtZW50JztcbmltcG9ydCB7IFNpbXBsZURvY3VtZW50LCBTaW1wbGVFbGVtZW50LCBTaW1wbGVOb2RlIH0gZnJvbSAnQHNpbXBsZS1kb20vaW50ZXJmYWNlJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTm9kZURPTVRyZWVDb25zdHJ1Y3Rpb24gZXh0ZW5kcyBET01UcmVlQ29uc3RydWN0aW9uIHtcbiAgcHJvdGVjdGVkIGRvY3VtZW50ITogU2ltcGxlRG9jdW1lbnQ7IC8vIEhpZGVzIHByb3BlcnR5IG9uIGJhc2UgY2xhc3NcbiAgY29uc3RydWN0b3IoZG9jOiBPcHRpb248U2ltcGxlRG9jdW1lbnQ+KSB7XG4gICAgc3VwZXIoZG9jIHx8IGNyZWF0ZUhUTUxEb2N1bWVudCgpKTtcbiAgfVxuXG4gIC8vIG92ZXJyaWRlIHRvIHByZXZlbnQgdXNhZ2Ugb2YgYHRoaXMuZG9jdW1lbnRgIHVudGlsIGFmdGVyIHRoZSBjb25zdHJ1Y3RvclxuICBwcm90ZWN0ZWQgc2V0dXBVc2VsZXNzRWxlbWVudCgpIHt9XG5cbiAgaW5zZXJ0SFRNTEJlZm9yZShwYXJlbnQ6IFNpbXBsZUVsZW1lbnQsIHJlZmVyZW5jZTogT3B0aW9uPFNpbXBsZU5vZGU+LCBodG1sOiBzdHJpbmcpOiBCb3VuZHMge1xuICAgIGxldCByYXcgPSB0aGlzLmRvY3VtZW50LmNyZWF0ZVJhd0hUTUxTZWN0aW9uIShodG1sKTtcbiAgICBwYXJlbnQuaW5zZXJ0QmVmb3JlKHJhdywgcmVmZXJlbmNlKTtcbiAgICByZXR1cm4gbmV3IENvbmNyZXRlQm91bmRzKHBhcmVudCwgcmF3LCByYXcpO1xuICB9XG5cbiAgLy8gb3ZlcnJpZGUgdG8gYXZvaWQgU1ZHIGRldGVjdGlvbi93b3JrIHdoZW4gaW4gbm9kZSAodGhpcyBpcyBub3QgbmVlZGVkIGluIFNTUilcbiAgY3JlYXRlRWxlbWVudCh0YWc6IHN0cmluZykge1xuICAgIHJldHVybiB0aGlzLmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQodGFnKTtcbiAgfVxuXG4gIC8vIG92ZXJyaWRlIHRvIGF2b2lkIG5hbWVzcGFjZSBzaGVuYW5pZ2FucyB3aGVuIGluIG5vZGUgKHRoaXMgaXMgbm90IG5lZWRlZCBpbiBTU1IpXG4gIHNldEF0dHJpYnV0ZShlbGVtZW50OiBTaW1wbGVFbGVtZW50LCBuYW1lOiBzdHJpbmcsIHZhbHVlOiBzdHJpbmcpIHtcbiAgICBlbGVtZW50LnNldEF0dHJpYnV0ZShuYW1lLCB2YWx1ZSk7XG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=