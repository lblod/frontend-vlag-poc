"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.setComponentTemplate = setComponentTemplate;
exports.getComponentTemplate = getComponentTemplate;

var _env = require("@glimmer/env");

var _util = require("@glimmer/util");

var TEMPLATES = new WeakMap();
var getPrototypeOf = Object.getPrototypeOf;

function setComponentTemplate(factory, obj) {
  if (_env.DEBUG && !(obj !== null && (typeof obj === 'object' || typeof obj === 'function'))) {
    throw new Error("Cannot call `setComponentTemplate` on `" + (0, _util.debugToString)(obj) + "`");
  }

  if (_env.DEBUG && TEMPLATES.has(obj)) {
    throw new Error("Cannot call `setComponentTemplate` multiple times on the same class (`" + (0, _util.debugToString)(obj) + "`)");
  }

  TEMPLATES.set(obj, factory);
  return obj;
}

function getComponentTemplate(obj) {
  var pointer = obj;

  while (pointer !== null) {
    var template = TEMPLATES.get(pointer);

    if (template !== undefined) {
      return template;
    }

    pointer = getPrototypeOf(pointer);
  }

  return undefined;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL0BnbGltbWVyL21hbmFnZXIvbGliL3B1YmxpYy90ZW1wbGF0ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBOztBQUNBOztBQUdBLElBQU0sU0FBUyxHQUFxQyxJQUFwRCxPQUFvRCxFQUFwRDtBQUVBLElBQU0sY0FBYyxHQUFHLE1BQU0sQ0FBN0IsY0FBQTs7QUFFTSxTQUFBLG9CQUFBLENBQUEsT0FBQSxFQUFBLEdBQUEsRUFBb0U7QUFDeEUsTUFBSSxjQUFTLEVBQUUsR0FBRyxLQUFILElBQUEsS0FBaUIsT0FBQSxHQUFBLEtBQUEsUUFBQSxJQUEyQixPQUFBLEdBQUEsS0FBM0QsVUFBZSxDQUFGLENBQWIsRUFBd0Y7QUFDdEYsVUFBTSxJQUFBLEtBQUEsQ0FBQSw0Q0FBdUQseUJBQTdELEdBQTZELENBQXZELEdBQU4sR0FBTSxDQUFOO0FBQ0Q7O0FBRUQsTUFBSSxjQUFTLFNBQVMsQ0FBVCxHQUFBLENBQWIsR0FBYSxDQUFiLEVBQWlDO0FBQy9CLFVBQU0sSUFBQSxLQUFBLENBQUEsMkVBQ3dFLHlCQUQ5RSxHQUM4RSxDQUR4RSxHQUFOLElBQU0sQ0FBTjtBQUtEOztBQUVELEVBQUEsU0FBUyxDQUFULEdBQUEsQ0FBQSxHQUFBLEVBQUEsT0FBQTtBQUVBLFNBQUEsR0FBQTtBQUNEOztBQUVLLFNBQUEsb0JBQUEsQ0FBQSxHQUFBLEVBQTBDO0FBQzlDLE1BQUksT0FBTyxHQUFYLEdBQUE7O0FBRUEsU0FBTyxPQUFPLEtBQWQsSUFBQSxFQUF5QjtBQUN2QixRQUFJLFFBQVEsR0FBRyxTQUFTLENBQVQsR0FBQSxDQUFmLE9BQWUsQ0FBZjs7QUFFQSxRQUFJLFFBQVEsS0FBWixTQUFBLEVBQTRCO0FBQzFCLGFBQUEsUUFBQTtBQUNEOztBQUVELElBQUEsT0FBTyxHQUFHLGNBQWMsQ0FBeEIsT0FBd0IsQ0FBeEI7QUFDRDs7QUFFRCxTQUFBLFNBQUE7QUFDRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERFQlVHIH0gZnJvbSAnQGdsaW1tZXIvZW52JztcbmltcG9ydCB7IGRlYnVnVG9TdHJpbmcgfSBmcm9tICdAZ2xpbW1lci91dGlsJztcbmltcG9ydCB7IFRlbXBsYXRlRmFjdG9yeSB9IGZyb20gJ0BnbGltbWVyL2ludGVyZmFjZXMnO1xuXG5jb25zdCBURU1QTEFURVM6IFdlYWtNYXA8b2JqZWN0LCBUZW1wbGF0ZUZhY3Rvcnk+ID0gbmV3IFdlYWtNYXAoKTtcblxuY29uc3QgZ2V0UHJvdG90eXBlT2YgPSBPYmplY3QuZ2V0UHJvdG90eXBlT2Y7XG5cbmV4cG9ydCBmdW5jdGlvbiBzZXRDb21wb25lbnRUZW1wbGF0ZShmYWN0b3J5OiBUZW1wbGF0ZUZhY3RvcnksIG9iajogb2JqZWN0KSB7XG4gIGlmIChERUJVRyAmJiAhKG9iaiAhPT0gbnVsbCAmJiAodHlwZW9mIG9iaiA9PT0gJ29iamVjdCcgfHwgdHlwZW9mIG9iaiA9PT0gJ2Z1bmN0aW9uJykpKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGBDYW5ub3QgY2FsbCBcXGBzZXRDb21wb25lbnRUZW1wbGF0ZVxcYCBvbiBcXGAke2RlYnVnVG9TdHJpbmchKG9iail9XFxgYCk7XG4gIH1cblxuICBpZiAoREVCVUcgJiYgVEVNUExBVEVTLmhhcyhvYmopKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgYENhbm5vdCBjYWxsIFxcYHNldENvbXBvbmVudFRlbXBsYXRlXFxgIG11bHRpcGxlIHRpbWVzIG9uIHRoZSBzYW1lIGNsYXNzIChcXGAke2RlYnVnVG9TdHJpbmchKFxuICAgICAgICBvYmpcbiAgICAgICl9XFxgKWBcbiAgICApO1xuICB9XG5cbiAgVEVNUExBVEVTLnNldChvYmosIGZhY3RvcnkpO1xuXG4gIHJldHVybiBvYmo7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRDb21wb25lbnRUZW1wbGF0ZShvYmo6IG9iamVjdCk6IFRlbXBsYXRlRmFjdG9yeSB8IHVuZGVmaW5lZCB7XG4gIGxldCBwb2ludGVyID0gb2JqO1xuXG4gIHdoaWxlIChwb2ludGVyICE9PSBudWxsKSB7XG4gICAgbGV0IHRlbXBsYXRlID0gVEVNUExBVEVTLmdldChwb2ludGVyKTtcblxuICAgIGlmICh0ZW1wbGF0ZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICByZXR1cm4gdGVtcGxhdGU7XG4gICAgfVxuXG4gICAgcG9pbnRlciA9IGdldFByb3RvdHlwZU9mKHBvaW50ZXIpO1xuICB9XG5cbiAgcmV0dXJuIHVuZGVmaW5lZDtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=