import { buildCapabilities } from '../util/capabilities';
export var FunctionHelperManager = /*#__PURE__*/function () {
  function FunctionHelperManager() {
    this.capabilities = buildCapabilities({
      hasValue: true,
      hasDestroyable: false,
      hasScheduledEffect: false
    });
  }

  var _proto = FunctionHelperManager.prototype;

  _proto.createHelper = function createHelper(fn, args) {
    return {
      fn: fn,
      args: args
    };
  };

  _proto.getValue = function getValue(_ref) {
    var fn = _ref.fn,
        args = _ref.args;

    if (Object.keys(args.named).length > 0) {
      var argsForFn = [].concat(args.positional, [args.named]);
      return fn.apply(void 0, argsForFn);
    }

    return fn.apply(void 0, args.positional);
  };

  _proto.getDebugName = function getDebugName(fn) {
    if (fn.name) {
      return "(helper function " + fn.name + ")";
    }

    return '(anonymous helper function)';
  };

  return FunctionHelperManager;
}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL0BnbGltbWVyL21hbmFnZXIvbGliL2ludGVybmFsL2RlZmF1bHRzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFNBQUEsaUJBQUEsUUFBQSxzQkFBQTtBQW1CQSxXQUFNLHFCQUFOO0FBQUEsbUNBQUE7QUFDRSxTQUFBLFlBQUEsR0FBZSxpQkFBaUIsQ0FBQztBQUMvQixNQUFBLFFBQVEsRUFEdUIsSUFBQTtBQUUvQixNQUFBLGNBQWMsRUFGaUIsS0FBQTtBQUcvQixNQUFBLGtCQUFrQixFQUFFO0FBSFcsS0FBRCxDQUFoQztBQTJCRDs7QUE1QkQ7O0FBQUEsU0FPRSxZQVBGLEdBT0Usc0JBQVksRUFBWixFQUFZLElBQVosRUFBNkM7QUFDM0MsV0FBTztBQUFFLE1BQUEsRUFBRixFQUFFLEVBQUY7QUFBTSxNQUFBLElBQUEsRUFBQTtBQUFOLEtBQVA7QUFDRCxHQVRIOztBQUFBLFNBV0UsUUFYRixHQVdFLHdCQUE0QjtBQUFBLFFBQW5CLEVBQW1CLFFBQW5CLEVBQW1CO0FBQUEsUUFBYixJQUFhLFFBQWIsSUFBYTs7QUFDMUIsUUFBSSxNQUFNLENBQU4sSUFBQSxDQUFZLElBQUksQ0FBaEIsS0FBQSxFQUFBLE1BQUEsR0FBSixDQUFBLEVBQXdDO0FBQ3RDLFVBQUksU0FBUyxhQUEwQixJQUFJLENBQVIsVUFBdEIsR0FBMkMsSUFBSSxDQUE1RCxLQUFhLEVBQWI7QUFFQSxhQUFPLEVBQUUsTUFBRixTQUFQLFNBQU8sQ0FBUDtBQUNEOztBQUVELFdBQU8sRUFBRSxNQUFGLFNBQU0sSUFBSSxDQUFqQixVQUFPLENBQVA7QUFDRCxHQW5CSDs7QUFBQSxTQXFCRSxZQXJCRixHQXFCRSxzQkFBWSxFQUFaLEVBQTRCO0FBQzFCLFFBQUksRUFBRSxDQUFOLElBQUEsRUFBYTtBQUNYLG1DQUEyQixFQUFFLENBQTdCLElBQUE7QUFDRDs7QUFFRCxXQUFBLDZCQUFBO0FBQ0QsR0EzQkg7O0FBQUE7QUFBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGJ1aWxkQ2FwYWJpbGl0aWVzIH0gZnJvbSAnLi4vdXRpbC9jYXBhYmlsaXRpZXMnO1xuXG5pbXBvcnQgdHlwZSB7XG4gIENhcHR1cmVkQXJndW1lbnRzIGFzIEFyZ3VtZW50cyxcbiAgSGVscGVyQ2FwYWJpbGl0aWVzLFxuICBIZWxwZXJNYW5hZ2VyV2l0aFZhbHVlLFxufSBmcm9tICdAZ2xpbW1lci9pbnRlcmZhY2VzJztcblxudHlwZSBGbkFyZ3M8QXJncyBleHRlbmRzIEFyZ3VtZW50cyA9IEFyZ3VtZW50cz4gPVxuICB8IFsuLi5BcmdzWydwb3NpdGlvbmFsJ10sIEFyZ3NbJ25hbWVkJ11dXG4gIHwgWy4uLkFyZ3NbJ3Bvc2l0aW9uYWwnXV07XG5cbnR5cGUgQW55RnVuY3Rpb24gPSAoLi4uYXJnczogYW55W10pID0+IHVua25vd247XG5cbmludGVyZmFjZSBTdGF0ZSB7XG4gIGZuOiBBbnlGdW5jdGlvbjtcbiAgYXJnczogQXJndW1lbnRzO1xufVxuXG5leHBvcnQgY2xhc3MgRnVuY3Rpb25IZWxwZXJNYW5hZ2VyIGltcGxlbWVudHMgSGVscGVyTWFuYWdlcldpdGhWYWx1ZTxTdGF0ZT4ge1xuICBjYXBhYmlsaXRpZXMgPSBidWlsZENhcGFiaWxpdGllcyh7XG4gICAgaGFzVmFsdWU6IHRydWUsXG4gICAgaGFzRGVzdHJveWFibGU6IGZhbHNlLFxuICAgIGhhc1NjaGVkdWxlZEVmZmVjdDogZmFsc2UsXG4gIH0pIGFzIEhlbHBlckNhcGFiaWxpdGllcztcblxuICBjcmVhdGVIZWxwZXIoZm46IEFueUZ1bmN0aW9uLCBhcmdzOiBBcmd1bWVudHMpOiBTdGF0ZSB7XG4gICAgcmV0dXJuIHsgZm4sIGFyZ3MgfTtcbiAgfVxuXG4gIGdldFZhbHVlKHsgZm4sIGFyZ3MgfTogU3RhdGUpOiB1bmtub3duIHtcbiAgICBpZiAoT2JqZWN0LmtleXMoYXJncy5uYW1lZCkubGVuZ3RoID4gMCkge1xuICAgICAgbGV0IGFyZ3NGb3JGbjogRm5BcmdzPEFyZ3VtZW50cz4gPSBbLi4uYXJncy5wb3NpdGlvbmFsLCBhcmdzLm5hbWVkXTtcblxuICAgICAgcmV0dXJuIGZuKC4uLmFyZ3NGb3JGbik7XG4gICAgfVxuXG4gICAgcmV0dXJuIGZuKC4uLmFyZ3MucG9zaXRpb25hbCk7XG4gIH1cblxuICBnZXREZWJ1Z05hbWUoZm46IEFueUZ1bmN0aW9uKTogc3RyaW5nIHtcbiAgICBpZiAoZm4ubmFtZSkge1xuICAgICAgcmV0dXJuIGAoaGVscGVyIGZ1bmN0aW9uICR7Zm4ubmFtZX0pYDtcbiAgICB9XG5cbiAgICByZXR1cm4gJyhhbm9ueW1vdXMgaGVscGVyIGZ1bmN0aW9uKSc7XG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=