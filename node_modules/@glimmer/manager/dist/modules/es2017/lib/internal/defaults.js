import { buildCapabilities } from '../util/capabilities';
export class FunctionHelperManager {
  constructor() {
    this.capabilities = buildCapabilities({
      hasValue: true,
      hasDestroyable: false,
      hasScheduledEffect: false
    });
  }

  createHelper(fn, args) {
    return {
      fn,
      args
    };
  }

  getValue({
    fn,
    args
  }) {
    if (Object.keys(args.named).length > 0) {
      let argsForFn = [...args.positional, args.named];
      return fn(...argsForFn);
    }

    return fn(...args.positional);
  }

  getDebugName(fn) {
    if (fn.name) {
      return `(helper function ${fn.name})`;
    }

    return '(anonymous helper function)';
  }

}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL0BnbGltbWVyL21hbmFnZXIvbGliL2ludGVybmFsL2RlZmF1bHRzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFNBQVMsaUJBQVQsUUFBa0Msc0JBQWxDO0FBbUJBLE9BQU0sTUFBTyxxQkFBUCxDQUE0QjtBQUFsQyxFQUFBLFdBQUEsR0FBQTtBQUNFLFNBQUEsWUFBQSxHQUFlLGlCQUFpQixDQUFDO0FBQy9CLE1BQUEsUUFBUSxFQUFFLElBRHFCO0FBRS9CLE1BQUEsY0FBYyxFQUFFLEtBRmU7QUFHL0IsTUFBQSxrQkFBa0IsRUFBRTtBQUhXLEtBQUQsQ0FBaEM7QUEyQkQ7O0FBckJDLEVBQUEsWUFBWSxDQUFDLEVBQUQsRUFBa0IsSUFBbEIsRUFBaUM7QUFDM0MsV0FBTztBQUFFLE1BQUEsRUFBRjtBQUFNLE1BQUE7QUFBTixLQUFQO0FBQ0Q7O0FBRUQsRUFBQSxRQUFRLENBQUM7QUFBRSxJQUFBLEVBQUY7QUFBTSxJQUFBO0FBQU4sR0FBRCxFQUFvQjtBQUMxQixRQUFJLE1BQU0sQ0FBQyxJQUFQLENBQVksSUFBSSxDQUFDLEtBQWpCLEVBQXdCLE1BQXhCLEdBQWlDLENBQXJDLEVBQXdDO0FBQ3RDLFVBQUksU0FBUyxHQUFzQixDQUFDLEdBQUcsSUFBSSxDQUFDLFVBQVQsRUFBcUIsSUFBSSxDQUFDLEtBQTFCLENBQW5DO0FBRUEsYUFBTyxFQUFFLENBQUMsR0FBRyxTQUFKLENBQVQ7QUFDRDs7QUFFRCxXQUFPLEVBQUUsQ0FBQyxHQUFHLElBQUksQ0FBQyxVQUFULENBQVQ7QUFDRDs7QUFFRCxFQUFBLFlBQVksQ0FBQyxFQUFELEVBQWdCO0FBQzFCLFFBQUksRUFBRSxDQUFDLElBQVAsRUFBYTtBQUNYLGFBQU8sb0JBQW9CLEVBQUUsQ0FBQyxJQUFJLEdBQWxDO0FBQ0Q7O0FBRUQsV0FBTyw2QkFBUDtBQUNEOztBQTNCK0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBidWlsZENhcGFiaWxpdGllcyB9IGZyb20gJy4uL3V0aWwvY2FwYWJpbGl0aWVzJztcblxuaW1wb3J0IHR5cGUge1xuICBDYXB0dXJlZEFyZ3VtZW50cyBhcyBBcmd1bWVudHMsXG4gIEhlbHBlckNhcGFiaWxpdGllcyxcbiAgSGVscGVyTWFuYWdlcldpdGhWYWx1ZSxcbn0gZnJvbSAnQGdsaW1tZXIvaW50ZXJmYWNlcyc7XG5cbnR5cGUgRm5BcmdzPEFyZ3MgZXh0ZW5kcyBBcmd1bWVudHMgPSBBcmd1bWVudHM+ID1cbiAgfCBbLi4uQXJnc1sncG9zaXRpb25hbCddLCBBcmdzWyduYW1lZCddXVxuICB8IFsuLi5BcmdzWydwb3NpdGlvbmFsJ11dO1xuXG50eXBlIEFueUZ1bmN0aW9uID0gKC4uLmFyZ3M6IGFueVtdKSA9PiB1bmtub3duO1xuXG5pbnRlcmZhY2UgU3RhdGUge1xuICBmbjogQW55RnVuY3Rpb247XG4gIGFyZ3M6IEFyZ3VtZW50cztcbn1cblxuZXhwb3J0IGNsYXNzIEZ1bmN0aW9uSGVscGVyTWFuYWdlciBpbXBsZW1lbnRzIEhlbHBlck1hbmFnZXJXaXRoVmFsdWU8U3RhdGU+IHtcbiAgY2FwYWJpbGl0aWVzID0gYnVpbGRDYXBhYmlsaXRpZXMoe1xuICAgIGhhc1ZhbHVlOiB0cnVlLFxuICAgIGhhc0Rlc3Ryb3lhYmxlOiBmYWxzZSxcbiAgICBoYXNTY2hlZHVsZWRFZmZlY3Q6IGZhbHNlLFxuICB9KSBhcyBIZWxwZXJDYXBhYmlsaXRpZXM7XG5cbiAgY3JlYXRlSGVscGVyKGZuOiBBbnlGdW5jdGlvbiwgYXJnczogQXJndW1lbnRzKTogU3RhdGUge1xuICAgIHJldHVybiB7IGZuLCBhcmdzIH07XG4gIH1cblxuICBnZXRWYWx1ZSh7IGZuLCBhcmdzIH06IFN0YXRlKTogdW5rbm93biB7XG4gICAgaWYgKE9iamVjdC5rZXlzKGFyZ3MubmFtZWQpLmxlbmd0aCA+IDApIHtcbiAgICAgIGxldCBhcmdzRm9yRm46IEZuQXJnczxBcmd1bWVudHM+ID0gWy4uLmFyZ3MucG9zaXRpb25hbCwgYXJncy5uYW1lZF07XG5cbiAgICAgIHJldHVybiBmbiguLi5hcmdzRm9yRm4pO1xuICAgIH1cblxuICAgIHJldHVybiBmbiguLi5hcmdzLnBvc2l0aW9uYWwpO1xuICB9XG5cbiAgZ2V0RGVidWdOYW1lKGZuOiBBbnlGdW5jdGlvbik6IHN0cmluZyB7XG4gICAgaWYgKGZuLm5hbWUpIHtcbiAgICAgIHJldHVybiBgKGhlbHBlciBmdW5jdGlvbiAke2ZuLm5hbWV9KWA7XG4gICAgfVxuXG4gICAgcmV0dXJuICcoYW5vbnltb3VzIGhlbHBlciBmdW5jdGlvbiknO1xuICB9XG59XG4iXSwic291cmNlUm9vdCI6IiJ9