interface CalculatePositionOptions {
    horizontalPosition: string;
    verticalPosition: string;
    matchTriggerWidth: boolean;
    previousHorizontalPosition?: string | undefined;
    previousVerticalPosition?: string | undefined;
    renderInPlace: boolean;
    dropdown: any;
}
export type CalculatePositionResultStyle = {
    top?: number | undefined;
    left?: number | undefined;
    right?: number | undefined;
    width?: number | undefined;
    height?: number | undefined;
    [key: string]: string | number | undefined;
};
export type CalculatePositionResult = {
    horizontalPosition: string;
    verticalPosition: string;
    style: CalculatePositionResultStyle;
};
export type CalculatePosition = (trigger: Element, content: HTMLElement, destination: HTMLElement, options: CalculatePositionOptions) => CalculatePositionResult;
export declare let calculateWormholedPosition: CalculatePosition;
export declare let calculateInPlacePosition: CalculatePosition;
export declare function getScrollParent(element: Element): Element;
declare let calculatePosition: CalculatePosition;
export default calculatePosition;
